# syntax=docker/dockerfile:labs
FROM debian:stable-slim
LABEL maintainer="avpnusr"
ARG TARGETARCH TARGETVARIANT DEBIAN_FRONTEND=noninteractive

ADD --link service /etc/service/

EXPOSE 8118 9050

RUN CPUARCH=${TARGETARCH}${TARGETVARIANT} \
&& if [ $CPUARCH == "armv6" ]; then export QEMU_CPU="arm1176"; fi \
&& apt update -y && apt upgrade -y && apt -y install privoxy obfs4proxy tor torsocks runit tini curl --no-install-recommends \
&& addgroup --system tordocker \
&& adduser --system tordocker --ingroup tordocker \
&& chown tordocker:tordocker /etc/service \
&& chown -R tordocker:tordocker /etc/service/* \
&& apt autoremove -y && apt-get clean \
&& rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* 


COPY <<EOT /docker-entrypoint.sh
#!/bin/sh
IFS=$'\\n\\t'
cp -f /etc/service/tor/torrc.base /etc/service/tor/torrc
if [ -n "\$BRIDGE" ]; then
  echo "UseBridges 1" >> /etc/service/tor/torrc
  echo "ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy" >> /etc/service/tor/torrc
  for TORBRIDGE in \$BRIDGE; do echo "Bridge \${TORBRIDGE}" >> /etc/service/tor/torrc; done
fi
exec "\$@"
EOT

RUN chmod +x /docker-entrypoint.sh

HEALTHCHECK --interval=120s --timeout=15s --start-period=120s --retries=2 \
            CMD curl --fail -x http://127.0.0.1:8118 -s 'https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion' -k > /dev/null && echo "HealthCheck succeeded..." || exit 1

USER tordocker

ENTRYPOINT ["tini", "--", "/docker-entrypoint.sh"]
CMD ["runsvdir", "/etc/service"]
